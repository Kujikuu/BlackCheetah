import{a as s}from"./useValidationRules-t0fURagL.js";const e=s(),t=["Operations","Training","Maintenance","Marketing","Finance","HR","Quality Control","Customer Service"],a=["low","medium","high"],r=["pending","in_progress","completed"],i=["pending","in_progress","completed","cancelled","on_hold"];function u(){return{title:[e.required("Task title is required"),e.string(),e.maxLength(255,"Task title cannot exceed 255 characters")],description:[e.required("Task description is required"),e.string()],category:[e.required("Task category is required"),e.inArray(t,"Invalid task category selected")],priority:[e.required("Task priority is required"),e.inArray(a,"Invalid priority level selected")],status:[e.required("Task status is required"),e.inArray(r,"Invalid task status selected")],assignedTo:[],dueDate:[e.date("Due date must be a valid date"),e.afterOrEqualToday("Due date must be today or in the future")],startDate:[e.date("Start date must be a valid date")],estimatedHours:[e.numeric("Estimated hours must be a number"),e.min(0,"Estimated hours cannot be negative")],actualHours:[e.numeric("Actual hours must be a number"),e.min(0,"Actual hours cannot be negative")],notes:[e.string()]}}function d(){return{title:[e.string(),e.maxLength(255,"Task title cannot exceed 255 characters")],description:[e.string()],category:[e.inArray(t,"Invalid task category selected")],priority:[e.inArray(a,"Invalid priority level selected")],status:[e.inArray(r,"Invalid task status selected")],assignedTo:[],dueDate:[e.date("Due date must be a valid date")],startDate:[e.date("Start date must be a valid date")],estimatedHours:[e.numeric("Estimated hours must be a number"),e.min(0,"Estimated hours cannot be negative")],actualHours:[e.numeric("Actual hours must be a number"),e.min(0,"Actual hours cannot be negative")],notes:[e.string()]}}function o(){return{status:[e.required("Task status is required"),e.inArray(i,"Status must be one of: pending, in_progress, completed, cancelled, on_hold")]}}export{u as a,o as b,d as u};
