import{g as r,O as I,b8 as s}from"./main-Cv9YYIc_.js";import{f as v}from"./franchise-Ci16IFAb.js";import{l as M}from"./lead-D7mM9u6-.js";import{u as N}from"./users-BoYN0WnH.js";import{f as P}from"./formatters-aoHiJebZ.js";const B=()=>{const h=r(!1),m=r(null),f=r(null),n=r([]),p=r([]),o=r([]),d=r(null),i=r(!1),y=r(!1),g=e=>{if(!e)return"Unknown";const a=new Date(e);if(Number.isNaN(a.getTime()))return console.warn("Invalid date string:",e),"Unknown";const c=new Date().getTime()-a.getTime(),l=Math.floor(c/(1e3*60*60));if(l<1)return"Just now";if(l<24)return`${l} hours ago`;const u=Math.floor(l/24);return u===1?"1 day ago":u<7?`${u} days ago`:u<30?`${Math.floor(u/7)} weeks ago`:a.toLocaleDateString()},L=I(()=>y.value?!0:i.value),w=async()=>{try{h.value=!0,m.value=null;const e=await v.getDashboardStats();if(e.success&&e.data)f.value=e.data;else throw new Error("Failed to fetch dashboard stats")}catch(e){m.value=e.message||"Failed to fetch dashboard statistics",console.error("Dashboard stats error:",e)}finally{h.value=!1}},A=async()=>{try{const e=await N.getBrokers();if(e.success&&e.data){const a=Array.isArray(e.data)?e.data:e.data.data||[];n.value=a.map(t=>({id:t.id,name:t.name,email:t.email,phone:t.phone||"",status:t.status||"active",leads_count:t.assignedLeads||0,created_at:t.created_at}))}else n.value=[]}catch(e){console.error("Brokers error:",e),n.value=[]}},b=async(e=10)=>{try{const a=await M.getLeadsWithLimit(e);a.success&&a.data?o.value=a.data:o.value=[]}catch(a){console.error("Leads error:",a),o.value=[]}},D=async()=>{try{const e=await v.getProfileCompletionStatus();e.success&&e.data?(d.value=e.data,i.value=!0):(i.value=!1,d.value=null)}catch(e){e.status===404||e.data&&e.data.success===!1?(i.value=!1,d.value=null):(i.value=!1,console.error("Profile completion error:",e))}},$=()=>{y.value=!0},S=()=>{var a;const e=[];Array.isArray(o.value)&&o.value.length>0&&o.value.slice(0,3).forEach(t=>{const c=`${t.firstName||""} ${t.lastName||""}`.trim()||"Unknown Lead",l=new Date().toISOString();e.push({id:t.id,type:"lead",title:`New lead: ${c}`,time:g(l),icon:"tabler-user-plus",color:"primary"})}),Array.isArray(n.value)&&n.value.length>0&&n.value.slice(0,2).forEach(t=>{if(t.status==="active"){const c=t.created_at||new Date().toISOString();e.push({id:t.id,type:"team",title:`${t.name} is managing ${t.leads_count} leads`,time:g(c),icon:"tabler-user-check",color:"info"})}}),(a=f.value)!=null&&a.currentMonthRevenue&&e.push({id:Date.now(),type:"revenue",title:`Monthly revenue: ${P(f.value.currentMonthRevenue,"SAR",!1)}`,time:"This month",icon:"tabler-currency-riyal",color:"warning"}),p.value=e.filter(t=>t.time!=="Invalid Date").slice(0,5)},k=async()=>{await D(),i.value&&(await Promise.all([w(),A(),b(10)]),S())},C=async()=>{await k()},E=async()=>{try{return(await v.getFranchiseData()).success===!0}catch(e){return e.status===404||console.error("Error checking franchise existence:",e),!1}};return{isLoading:s(h),error:s(m),dashboardStats:s(f),brokers:s(n),recentActivities:s(p),leads:s(o),profileCompletionStatus:s(d),isProfileComplete:s(L),franchiseExists:s(i),fetchDashboardStats:w,fetchSalesAssociates:A,fetchLeads:b,fetchProfileCompletion:D,dismissBanner:$,initializeDashboard:k,refreshDashboard:C,generateRecentActivities:S,checkFranchiseExists:E}};export{B as u};
