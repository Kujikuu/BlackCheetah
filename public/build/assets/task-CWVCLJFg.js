import{a_ as e}from"./main-BPhS35rw.js";import{g as r}from"./api-router-DNaOhggD.js";class c{getBaseUrl(){return r("tasks")}async getMyTasks(a){const t=this.getBaseUrl(),s=new URLSearchParams;a!=null&&a.status&&s.append("status",a.status),a!=null&&a.priority&&s.append("priority",a.priority),a!=null&&a.category&&s.append("category",a.category),a!=null&&a.page&&s.append("page",a.page.toString()),a!=null&&a.perPage&&s.append("per_page",a.perPage.toString());const n=s.toString(),o=n?`${t}?${n}`:t;return await e(o,{method:"GET"})}async getFranchisorTasks(){return await e("/v1/franchisor/tasks")}async createFranchisorTask(a){return await e("/v1/franchisor/tasks",{method:"POST",body:a})}async getStatistics(){const a=this.getBaseUrl();return await e(`${a}/statistics`,{method:"GET"})}async updateTaskStatus(a,t){const s=this.getBaseUrl();return await e(`${s}/${a}/status`,{method:"PATCH",body:{status:t}})}async getTask(a){const t=this.getBaseUrl();return await e(`${t}/${a}`,{method:"GET"})}async createTask(a){const t=this.getBaseUrl();return await e(t,{method:"POST",body:a})}async updateTask(a,t){const s=this.getBaseUrl();return await e(`${s}/${a}`,{method:"PUT",body:t})}async deleteTask(a){const t=this.getBaseUrl();return await e(`${t}/${a}`,{method:"DELETE"})}}const y=new c;export{y as t};
