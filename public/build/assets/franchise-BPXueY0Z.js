import{a_ as i}from"./main-BPhS35rw.js";import{g as c}from"./api-router-DNaOhggD.js";class o{getBaseUrl(){return c("franchise")}async getFranchiseData(){return await i(`${this.getBaseUrl()}/data`)}async updateFranchise(n){return await i(`${this.getBaseUrl()}/update`,{method:"PUT",body:n})}async uploadLogo(n){const e=new FormData;return e.append("logo",n),await i(`${this.getBaseUrl()}/upload-logo`,{method:"POST",body:e})}async getFranchises(n){return await i(this.getBaseUrl(),{method:"GET",query:n})}async getFranchiseesWithUnit(n){return await i(`${this.getBaseUrl()}/franchisees-with-unit`,{method:"GET",query:n})}async createFranchise(n){return await i(this.getBaseUrl(),{method:"POST",body:n})}async getFranchiseById(n){return await i(`${this.getBaseUrl()}/${n}`)}async createFranchiseeWithUnit(n){return await i(`${this.getBaseUrl()}/franchisees-with-unit`,{method:"POST",body:n})}async getUnits(){return await i("/v1/franchisor/units")}async getUnitsStatistics(){return await i("/v1/franchisor/units/statistics")}async getFranchisees(){return await i("/v1/franchisor/franchisees")}async registerFranchise(n){return await i("/v1/franchisor/franchise/register",{method:"POST",body:n})}async getDashboardStats(){return await i("/v1/franchisor/dashboard/stats")}async getProfileCompletionStatus(){return await i("/v1/franchisor/profile/completion-status")}async getDashboardOperations(){return await i("/v1/franchisor/dashboard/operations")}async getDashboardLeads(){return await i("/v1/franchisor/dashboard/leads")}async getDashboardFinance(){return await i("/v1/franchisor/dashboard/finance")}async getDashboardTimeline(){return await i("/v1/franchisor/dashboard/timeline")}async getDocuments(n){return await i(`/v1/franchises/${n}/documents`)}async createDocument(n,e){const t=new FormData;return t.append("name",e.name),t.append("type",e.type),e.description&&t.append("description",e.description),e.status&&t.append("status",e.status),t.append("is_confidential",e.is_confidential?"1":"0"),e.expiry_date&&t.append("expiry_date",e.expiry_date),e.file&&t.append("file",e.file),await i(`/v1/franchises/${n}/documents`,{method:"POST",body:t})}async updateDocument(n,e,t){const r=new FormData;return t.name&&r.append("name",t.name),t.type&&r.append("type",t.type),t.description&&r.append("description",t.description),t.status&&r.append("status",t.status),t.is_confidential!==void 0&&r.append("is_confidential",t.is_confidential?"1":"0"),t.expiry_date&&r.append("expiry_date",t.expiry_date),t.file&&r.append("file",t.file),await i(`/v1/franchises/${n}/documents/${e}`,{method:"PUT",body:r})}async deleteDocument(n,e){return await i(`/v1/franchises/${n}/documents/${e}`,{method:"DELETE"})}async downloadDocument(n,e){return await i(`/v1/franchises/${n}/documents/${e}/download`,{method:"GET"})}async getProducts(n){return await i(`/v1/franchises/${n}/products`)}async createProduct(n,e){const t=new FormData;t.append("name",e.name),t.append("description",e.description),t.append("category",e.category),t.append("status",e.status||"active");const r=e.price||e.unit_price||0;return t.append("unit_price",r.toString()),e.stock!==void 0&&t.append("stock",e.stock.toString()),e.sku&&t.append("sku",e.sku),e.image&&t.append("image",e.image),await i(`/v1/franchises/${n}/products`,{method:"POST",body:t})}async updateProduct(n,e,t){const r=t.image?(()=>{const s=new FormData;t.name&&s.append("name",t.name),t.description&&s.append("description",t.description),t.category&&s.append("category",t.category),t.status&&s.append("status",t.status);const a=t.price||t.unit_price;return a!==void 0&&s.append("unit_price",a.toString()),t.stock!==void 0&&s.append("stock",t.stock.toString()),t.sku&&s.append("sku",t.sku),t.image&&s.append("image",t.image),s})():t;return await i(`/v1/franchises/${n}/products/${e}`,{method:"PUT",body:r})}async deleteProduct(n,e){return await i(`/v1/franchises/${n}/products/${e}`,{method:"DELETE"})}async uploadRegistrationDocument(n,e,t,r){const s=new FormData;return s.append("file",e),s.append("name",t),s.append("description",`${t} uploaded during franchise registration`),s.append("type",r),await i(`/v1/documents/${n}`,{method:"POST",body:s})}async updateUnitStatus(n,e){return await i(`/v1/units/${n}/status`,{method:"PATCH",body:{status:e}})}}const h=new o;export{h as f};
