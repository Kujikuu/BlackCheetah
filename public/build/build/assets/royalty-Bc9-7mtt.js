import{aO as r,aL as s}from"./main-DIUPubGx.js";const o="/v1/franchisor/royalties",i="/v1/unit-manager/royalties",n=()=>{var a;return((a=s("userData").value)==null?void 0:a.role)==="franchisor"?o:i},c={async getRoyalties(e){return await r(n(),{params:e})},async getRoyalty(e){return await r(`${n()}/${e}`)},async getStatistics(e){return await r(`${n()}/statistics`,{params:e})},async markAsPaid(e,t){const a=new FormData;return a.append("amount_paid",(t.amount_paid||0).toString()),a.append("payment_date",t.payment_date||""),a.append("payment_method",t.payment_type||""),t.payment_reference&&a.append("payment_reference",t.payment_reference),t.notes&&a.append("notes",t.notes),t.attachment&&a.append("attachment",t.attachment),await r(`${n()}/${e}/mark-paid`,{method:"PATCH",body:a})},async exportRoyalties(e){return await r(`${n()}/export`,{params:e,parseResponse:t=>t})},async createRoyalty(e){return await r("/api/v1/royalties",{method:"POST",body:e})},async updateRoyalty(e,t){return await r(`${n()}/${e}`,{method:"PUT",body:t})},async deleteRoyalty(e){await r(`${n()}/${e}`,{method:"DELETE"})},async addAdjustment(e,t,a){return await r(`${n()}/${e}/adjustments`,{method:"POST",body:{adjustment_amount:t,adjustment_reason:a}})},async calculateLateFee(e){return await r(`${n()}/${e}/late-fee`,{method:"POST"})}};export{c as r};
